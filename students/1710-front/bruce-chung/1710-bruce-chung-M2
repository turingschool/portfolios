# Yourname Here - M2 Portfolio

## Areas of Emphasis

I had three goal for the mod: provide better leadership for my class, improve problem-solving speed, and begin to reach outside Turing.  Casey and I began the mod by being more organized with our retro, and I brought in Uncle Tan to talk about mentorship.  I think our organization in mod2 improved measurably.  Problem solving speed improved greatly.  As for looking outside Turing, I failed to attend meetups but was able to gain two mentors.

## Rubric Scores

* **A: End-of-Module Assessment**: Pass
* **B: Individual Work & Projects**: Pass
* **C: Group Work & Projects**: Pass
* **D: Professional Skills**: Pass
* **E: Community Participation**: Pass

-----------------------

## A: End of Module Assessment

Pass

## B: Individual Work & Projects

Solo projects this Mod were Sorting-Suite and Complete-Me.

## Sorting-Suite

* [GitHub URL](https://github.com/brucekchung/sorting-suite)
* [Original Assignment](http://frontend.turing.io/projects/sorting-suite.html)

Sorting suite introduced Bubble sort, insertion sort, merge sort, and quick sort.

#### Evaluator: Leta


## Complete-Me

* [GitHub URL](https://github.com/brucekchung/complete-me)
* [Original Assignment](http://frontend.turing.io/projects/complete-me.html)

This project traveresed a trie that could insert and suggest words.

#### Evaluator: Nathaniel 



## C: Group Work & Projects

### Projects

The group projects this mod were GameTime and Weathrly

## GameTime

* [GitHub URL](https://github.com/brucekchung/gametime)
* [Original Assignment](http://frontend.turing.io/projects/game-time.html)

Gametime was my favorite Turing project to date, and perhaps the first real challenge I had.  James and I went above and beyond.  We originally modeled our game after 'Towerfall' but eventually evolved our own version named 'Towerfall' that won Code fair.  It was a platform based coop game that had a versus and coop mode, where characters of different lasses foght with their given projectile.  More additions will be added.

### Evaluator: Nathaniel and Leta

#### Functional Expectations

* 4 - Application is fully playable and exceeds the expectations set by instructors

#### User Interface

* 4 - The application is pleasant, logical, and easy to use. There are no holes in functionality and the application stands on its own to be used by the instructor without guidance from the developer.

#### Testing

* 3.5 - Project has a running test suite that tests multiple levels but fails to cover some features. All functionality is covered by tests. The application makes some use of integration testing.

#### JavaScript Style

* 3.5 - Application is thoughtfully put together with some duplication and no major bugs. Developer can speak to choices made in the code and knows what every line of code is doing.

#### Workflow

* 4 - The developer effectively uses Git branches and many small, atomic commits that document the evolution of their application.

#### Code Sanitation

* 4 - Zero complaints



## Weathrly

* [GitHub URL](https://github.com/brucekchung/weatherly)
* [Original Assignment](http://frontend.turing.io/projects/weathrly.html)

Weathrly was the first react project we had.  It drew from the undeground weather API (our first API calls)

### Evaluator: Nathaniel

#### Functional Expectations

* 3 - The application consists of one page with all of the major functionality being provided by React. No approach was taken that is counter to the spirit of the project and its learning goals. There are no features missing from above that make the application feel incomplete or hard to use.

#### User Interface

* 3 - The application has many strong pages/interactions, but a few holes in lesser-used functionality. The application less than 3 aXe-core violations

#### Testing

* 3: Developer solves structural problems with a balance between conciseness and clarity. Developer can speak to choices made in the code and knows what every line of code and every tag and selector is doing.

#### JavaScript Style

* 3: Application is thoughtfully put together with some duplication and no major bugs. Developer can speak to choices made in the code and knows what every line of CSS/Sass is doing.


#### Workflow

* 3 - The developer makes a series of small, atomic commits that document the evolution of their application. There are no formatting issues in the code base.

#### Code Sanitation

* 4 - Zero complaints

## E: Community Participation

### Playing a Part

After six weeks of leading discussion with my class, my sense in mod2 was that our focus shifted from becoming a cohesive unit (mod1) to helping the new cohort, and even more to looking outside Turing towards our end goal.  I like to believe that because of my efforts, the number of students with mentors at least doubled during Mod2 (from 5 to 10+).  This was one of my main points of focus for leading the class this mod.  
Outside of my class, I dropped Iron FE in favor for offering more pairing sessions for mod1. My sessions for Monday, Tuesday, and Wednesday were usually filled before the weekdend began, and I paired frequently outside my offered times.
I participated in Code Fair, winning the event with my partner James.  We will attend Demo Night tomorrow.

------------------

## Final Review

### Notes

( Leave blanks for reviewers )

### Outcome

( Leave blanks for reviewers )
