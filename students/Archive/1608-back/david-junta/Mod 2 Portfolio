# Dave Junta - M2 Portfolio

## Areas of Emphasis

I want to continue to develop my skills with Ruby, adding  the Sinatra  and  Rails frameworks as well as HTML/CSS and SQL.  My goal is to stay on track with all assignments while carving out time to do extra work on these areas on my own.

## Rubric Scores

* **A: End-of-Module Assessment**: X
* **B: Individual Work & Projects**: X
* **C: Group Work & Projects**: X
* **D: Professional Skills**: X
* **E: Feedback & Community Participation**: X

-----------------------

## A: End of Module Assessment

(Notes & scores from your assessment rubric)


## B: Individual Work & Projects

Our new individual mini-projects were Mix Master and Job Tracker.  They were good opportunities to get used to Rails, CRUDing, MVC concepts and HTML/CSS.

#### (Mix Master)

* [GitHub URL](https://github.com/dijital2016/mix_master)
* [Original Assignment](https://github.com/turingschool/lesson_plans/tree/master/ruby_02-web_applications_with_ruby/mix_master)

By the end of this tutorial, you will know/be able to:

--deploy an app to Heroku<br>
--write model tests using RSpec<br>
--write feature tests using RSpec and Capybara<br>
--use branches and commits to develop git workflow<br>
--model one-to-many data relationships<br>
--model many-to-many data relationships<br>
--use factories to create objects to use in tests

#### Job Tracker

* [GitHub URL]  https://github.com/dijital2016/job-tracker
* [Original Assignment]  https://github.com/case-eee/job-tracker

Job Tracker is a job-tracking app that came with very limited functionality.  The project was to add various models, controllers and views to build out its functionality.

1) Database, Relationships, and Migrations

4: The database has appropriate tables and appropriate columns to create relationships between tables. Foreign keys are indexed to increase database performance. Tables and columns are appropriately named.
2) Routes

3: The developer has routes for all functionality that they provide, but may include routes that are not used in the application.
3) Controllers

3: Some logic may leak into the controllers that would more appropriately exist in a model/PORO. The developer may pass more instance variables than necessary to the view.
4) ActiveRecord

3: ActiveRecord methods are used appropriately in the database, but some Ruby enumerables may also be used. The developer uses ActiveRecord relationships appropriately, and does not call on other classes in their models.
5) Views

3: Limited logic that could be moved elsewhere remains in the views and/or controllers and developers are able to identify potentially opportunities to refactor.
6) User Experience

2: The application has limited styling, and it may not be clear how to navigate the application.
7) Testing

2: Project has sporadic use of tests and multiple levels

## C: Group Work & Projects

### Projects

Our group projects were Rush Hour and Little Shop.

#### Rush Hour

* [GitHub URL](https://github.com/dijital2016/rush-hour)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/rush_hour.md)

--"RushHour will be an application that aggregates and analyzes visitor data from another website. A RushHour customer/client will embed JavaScript in their website that will gather and send their visitor data to our site. It is important to note that we will not be creating this JavaScript. Instead we will simulate the process of gathering and receiving data, which we will call a payload. Our job is to build the application that can accept the submission of these payloads, analyze the data submitted, and display it through a HTML interface."

## Evaluation -- Casey Cumbow
#### 1. Functional Expectations
* 3: Application fulfills base expectations
#### 2. Test-Driven Development
* 3: Application is well tested but does not balance isolation and integration/feature tests
#### 3. Encapsulation / Breaking Logic into Components
* 3: Application effectively breaks logical components apart but breaks the principle of SRP
#### 4. Fundamental Ruby & Style
* 3: Application shows strong effort towards organization, content, and refactoring
#### 5. Sinatra / Web and Business Logic
* 3: Application makes good use of Sinatra but has some mixing of the web and business logic.
#### 6. View Layer
* 4: Application expertly breaks components out to view partials and makes use of both built-in and custom-written view helpers.

#### iShopBeer (Little Shop)

* [GitHub URL](https://github.com/mscherer11/i-shop-beer)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/little_shop.markdown)

Learning Goals

Use TDD to drive all layers of Rails development including unit and integration tests
Design a system of models which use one-to-one, one-to-many, and many-to-many relationships
Practice mixing HTML, CSS, and templates to create an inviting and usable User Interface
Differentiate responsibilities between components of the Rails stack
Build a logical user-flow that moves across multiple controllers and models
Practice an agile workflow and improve communication skills working within a team

(evaluation comments)

(evaluation scores)

(feedback to me)

### Gear Up
#### --The three gear ups were:
"Vote Your Conscience", "Introversion", and "Resilience"

* [GitHub URLs]
--https://github.com/turingschool/gear-up/blob/master/vote_your_conscience.markdown
--https://github.com/turingschool/gear-up/blob/master/introversion.markdown
--https://github.com/turingschool/gear-up/blob/master/resilience.markdown

 Takeaways:
 --I enjoyed all the Gear Ups this module, especially the discussions.

We had a wide range of views about whether the United States should still even be considered a democracy given campaign finance laws and the ability of people and organizations with lots of money to influence election outcomes.  Those who considered America a democracy defintitely felt more strongly about the importance of voting.

The introversion discussion led to a heated discussion about whether the whole introvert/extrovert label is too limiting.  A few people felt it put people into boxes that weren't realistic because all of us are both introverts and extroverts to some extent.  There was a vague consensus that everyone would benefit from trying to develop more of the qualities that don't come naturally to them, essentially suggesting that introverts push themselves to be more extroverted and vice versa.

Lastly, the resilience discussion revolved around whether resilience can be taught or imparted on others, especially students.  There was no consensus on this, despite everyone agreeing that having resilience was a beneficial thing.  We also had an interesting discussion about the fine line at Turing between purposely pushing students into very challenging situations that require developing resilience and pushing them too far.  There was a general consensus that being pushed was good but that it is often difficult for fellow students and staff to know when an individual student needs to be pushed and when they need some support.

### Professional Development Workshops
#### ("Finding Opportunities" & "Cold Outreach")
--https://github.com/turingschool/professional_skills/blob/master/module_two/finding_opportunities.md

## E: Feedback and Community Participation

### Giving Feedback

For Susi Irwin:
“Susi has been a fantastic Imposters Group leader with just the right balance between leading the group and opening things up so that everyone else can contribute as much or as little as they wish.  She’s always willing to share stories about her own difficulties and successes, and always makes it clear that she is willing to support anyone in any way she can.
Beyond the Imposters Group, she continues to be an integral part of the Turing culture, embodying warmth, hard work and intelligence.  I feel fortunate she’s a part of the entire Turing experience.  We’re all lucky to have her."

### Technical Blog Post
"Technical stock analysis with Ruby on Rails"
https://medium.com/@djunta/technical-stock-analysis-with-ruby-on-rails-9de1e39cca45#.3il3dq1m9

### Playing a Part

I participated in the Pahlka posse, the Imposters group and the Productivity Lunch group.  I also really enjoyed the Lunch Roulette groups as it enabled a lot of great introductions and conversations with Turing people I'd never met before, especially from the front-end program.

------------------

## Final Review

### Notes

( Leave blanks for reviewers )

### Outcome

( Leave blanks for reviewers )
